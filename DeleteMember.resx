<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABeAJcDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8QfLjuJceUq1aOgKIt/JVucCujXwazy+Z5fPTkVdj8MNFDwrE
        +ldBx2ZwsloqA/uWyPemiKB1C+WynvXXXfhpifmQ/wCNVz4P8yRW8vbgUAYKaApi3LwCOw5qu1pBCxDr
        J+Peu2tvDTJFyG46DFUdR0AThgy/pQFjl7fRYbqdY49u49ARVs+DmaRfk+X6Vqab4e+x3cbsSdprv9Cs
        rO6f98VC4ByaBxjc81fwaSen4EVlzeEpba/+WM4+nWvc9Q8N6fcRqbeSNtxwfaqXiD9m/Xviboc9xod1
        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
</value>
  </data>
</root>